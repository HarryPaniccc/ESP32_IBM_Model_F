/*
Author: Harry Papanicolaou
Date: 21/02/2025

This code reads in the data line of an IBM Model F keyboard on the falling edge of the clock generated by the keyboard, and is meant to 
translate the bits received to the keys they represent. This is not meant to drive keyboard input.

*/

//GPIO pins used for the keyboard clock and data pins
int keyboard_clk = 25;
int keyboard_data = 26;

uint16_t output_character_code = 0; /* The data is sent supposedly in 8 bits plus 2 start bits on the front.
                                      So on interrupt we should read in data and feed the last integer of data out into the serial port.

//tells us how far through the keystroke code we are so we can reset our count and output something.
int data_bit_number = 0;

void IRAM_ATTR clock_falling_edge(){
  output_character_code = (output_character_code >> 1) + (digitalRead(keyboard_data) << 8); //FREAKY mode - MSB is first telling if it is being pushed or released


  // output_character_code = (output_character_code << 1) + digitalRead(keyboard_data); /* NORMAL mode - MSB is last telling if it is being pushed or released
                                                                                                      Leftmost bit is always 1 for some reason (might be the start(1) bit)*/

  data_bit_number++; //increment the bit by 1. If it reaches 10, we need to reset it.
}


void setup() {
  // put your setup code here, to run once:

}

void loop() {
  // put your main code here, to run repeatedly:

}
